name: Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version'
        required: true
        type: string
      draft:
        description: 'Draft release?'
        required: true
        type: boolean
      prerelease:
        description: 'Pre-release?'
        required: true
        type: boolean
      releasedocker:
        description: 'Release to docker hub?'
        required: true
        type: boolean

env:
  CARGO_TERM_COLOR: always
  cache: 0

jobs:
  macos:
    name: macos
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - uses: Swatinem/rust-cache@v2
      - name: Build
        run: |
          ./install_protoc_osx.sh
          cargo build --release
      - name: tar
        run: |
          pushd target/release/
          tar cvzf goodmetrics-osx.x86_64.tar.gz goodmetrics goodmetricsd
          popd
          mv target/release/goodmetrics-osx.x86_64.tar.gz ./
      - name: Upload client artifact
        uses: actions/upload-artifact@v2
        with:
          name: goodmetrics-osx.x86_64.tar.gz
          path: ./goodmetrics-osx.x86_64.tar.gz
  # musl:
  #   name: musl
  #   runs-on: ubuntu-20.04
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: Swatinem/rust-cache@v1
  #     - name: install rust musl toolchain
  #       run: rustup target add x86_64-unknown-linux-musl
  #     - name: update apt
  #       run: sudo apt-get update
  #     - name: install musl-tools
  #       run: sudo apt-get install -y build-essential musl musl-dev musl-tools libssl-dev pkg-config
  #     - name: build
  #       run: |
  #         ./install_protoc.sh
  #         cargo build --release --target x86_64-unknown-linux-musl
  #     - name: tar
  #       run: |
  #         tree
  #         pushd target/x86_64-unknown-linux-musl/release/
  #         tar cvzf goodmetrics-linux.x86_64.tar.gz goodmetrics goodmetricsd
  #         popd
  #         mv target/x86_64-unknown-linux-musl/release/goodmetrics-linux.x86_64.tar.gz ./
  #     - name: Upload client artifact
  #       uses: actions/upload-artifact@v2
  #       with:
  #         name: goodmetrics-linux.x86_64.tar.gz
  #         path: ./goodmetrics-linux.x86_64.tar.gz
  ubuntu:
    name: ubuntu
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v2
      - uses: Swatinem/rust-cache@v2
      - name: build
        run: |
          ./install_protoc.sh
          cargo build --release
      - name: tar
        run: |
          pushd target/release/
          tar cvzf goodmetrics-ubuntu.x86_64.tar.gz goodmetrics goodmetricsd
          popd
          mv target/release/goodmetrics-ubuntu.x86_64.tar.gz ./
      - name: Upload client artifact
        uses: actions/upload-artifact@v2
        with:
          name: goodmetrics-ubuntu.x86_64.tar.gz
          path: ./goodmetrics-ubuntu.x86_64.tar.gz

  upload-release:
    name: upload release
    runs-on: ubuntu-22.04
    needs:
      - ubuntu
      - macos
    steps:
      - uses: actions/checkout@v2
      - name: download clients
        id: linux_client
        uses: actions/download-artifact@v2
        with:
          path: artifacts/
      
      - name: tree
        run: tree

      - name: create release
        uses: softprops/action-gh-release@v1
        with:
          draft: ${{ github.event.inputs.draft }}
          prerelease: ${{ github.event.inputs.prerelease }}
          name: ${{ github.event.inputs.version }}
          tag_name: ${{ github.event.inputs.version }}
          files: artifacts/*/*

  docker:
    runs-on: ubuntu-latest
    steps:
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@v2
        with:
          push: ${{ github.event.inputs.releasedocker }}
          tags: kvc0/goodmetrics:latest,kvc0/goodmetrics:${{ github.event.inputs.version }}
